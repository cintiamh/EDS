// Generated by CoffeeScript 1.4.0
(function() {
  var Alien1, BLOCK_SIZE, HEIGHT, HEIGHT_BLOCKS, SquaryObject, WIDTH, WIDTH_BLOCKS, backgroundLayer, backgroundRect, stage,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BLOCK_SIZE = 3;

  WIDTH_BLOCKS = 232;

  HEIGHT_BLOCKS = 148;

  WIDTH = WIDTH_BLOCKS * BLOCK_SIZE;

  HEIGHT = HEIGHT_BLOCKS * BLOCK_SIZE;

  stage = new Kinetic.Stage({
    container: "container",
    width: WIDTH,
    height: HEIGHT
  });

  backgroundLayer = new Kinetic.Layer();

  backgroundRect = new Kinetic.Rect({
    x: 0,
    y: 0,
    width: WIDTH,
    height: HEIGHT,
    fill: "#000000"
  });

  backgroundLayer.add(backgroundRect);

  stage.add(backgroundLayer);

  SquaryObject = (function() {

    function SquaryObject(x, y, color, pos1, pos2) {
      this.x = x;
      this.y = y;
      this.color = color;
      this.pos1 = pos1;
      this.pos2 = pos2;
      this.firstAnim = true;
      this.squareSeq = this.pos1;
    }

    SquaryObject.prototype.animate = function() {
      if (this.firstAnim) {
        this.firstAnim = false;
        return this.squareSeq = this.pos1;
      } else {
        this.firstAnim = true;
        return this.squareSeq = this.pos2;
      }
    };

    SquaryObject.prototype.draw = function() {};

    return SquaryObject;

  })();

  Alien1 = (function(_super) {

    __extends(Alien1, _super);

    function Alien1() {
      return Alien1.__super__.constructor.apply(this, arguments);
    }

    Alien1.prototype.draw = function() {};

    return Alien1;

  })(SquaryObject);

}).call(this);
